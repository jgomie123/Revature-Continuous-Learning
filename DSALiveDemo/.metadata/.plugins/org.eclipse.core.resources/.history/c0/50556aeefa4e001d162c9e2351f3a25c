package algorithms.and.patterns;

/*When we are writing methods, or when we code in general, 
 * especially as we start working on larger applications, and even during interviews,
 * we should put sopme thought into how "efficient" our code is. 
 * For example, perhaps you or your employer are concerned with how much memory
 * your implementation requires. You or your employer, or your interviewer
 * might also be concerned about how fast an algorithm runs. 
 * 
 * When we concern ourselves with how fast an algorithm runs, then we are thinking about what is called
 * the Time COmplexity of the algorithm. To represent an algorithm's time complexity, 
 * we use "Big O Notation". For example: 
 * 
 * O(1) - Constant time: Hashmap lookup, array access and update, pushing and popping elements from a stack
 * O(n^2) - Quadratic time: Nested loops, oftentimes brute force solutions 
 * O(n) -  Linear time: going through an array/linked list 
 * O(log(n))(log(n) - 
 * */

public class searchingalgorithms {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		
		
	}

}
